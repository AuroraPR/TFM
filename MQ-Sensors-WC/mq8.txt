
#include <PubSubClient.h>
#include <ESP8266WiFi.h>
//Include the library
#include <MQUnifiedsensor.h>
/************************Hardware Related Macros************************************/
#define         Board                   ("ESP8266")
#define         Pin                     (A0)  //Analog input 3 of your arduino
/***********************Software Related Macros************************************/
#define         Type                    ("MQ-8") //MQ8
#define         Voltage_Resolution      (5)
#define         ADC_Bit_Resolution      (10) // For arduino UNO/MEGA/NANO
#define         RatioMQ8CleanAir        (70) //RS / R0 = 70 ppm

/*****************************Globals***********************************************/
MQUnifiedsensor MQ8(Board, Voltage_Resolution, ADC_Bit_Resolution, Pin, Type);

/*****************************Globals***********************************************/

const char* ssid     = "Adetem";
const char* password = "AuroraJavi";

const char* topic = "sensors/mq8";
const char* server = "192.168.43.46";
float sensorValue;

void callback(char* topic, byte* payload, unsigned int length) {
}

WiFiClient wifiClient;
PubSubClient client(server, 1883, callback, wifiClient);


String macToStr(const uint8_t* mac)
{
  String result;
  for (int i = 0; i < 6; ++i) {
    result += String(mac[i], 16);
    if (i < 5)
      result += ':';
  }
  return result;
}


void setup() {
  Serial.begin(9600);
  delay(10);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
  }

  String clientName;
  clientName += "esp8266-";
  uint8_t mac[6];
  WiFi.macAddress(mac);
  clientName += macToStr(mac);
  clientName += "-";
  clientName += String(micros() & 0xff, 16);



  if (client.connect((char*) clientName.c_str())) {
    Serial.println("Connected to MQTT broker");
  } else {
    Serial.println("MQTT connect failed");
    abort();
  }


  //Set math model to calculate the PPM concentration and the value of constants
   MQ8.setRegressionMethod(1); //_PPM =  a*ratio^b
   MQ8.setA(80000000000000); MQ8.setB(-6.666); // Configurate the ecuation values to get H2 concentration

   /*
     Exponential regression:
   GAS     | a      | b
   H2      | 976.97  | -0.688
   LPG     | 10000000 | -3.123
   CH4     | 80000000000000 | -6.666
   CO      | 2000000000000000000 | -8.074
   Alcohol | 76101 | -1.86
   */

/*****************************  MQ Init ********************************************/
//Remarks: Configure the pin of arduino as input.
/************************************************************************************/
MQ8.init();
/*
  //If the RL value is different from 10K please assign your RL value with the following method:
  MQ8.setRL(10);
*/
/*****************************  MQ CAlibration ********************************************/
// Explanation:
// In this routine the sensor will measure the resistance of the sensor supposing before was pre-heated
// and now is on clean air (Calibration conditions), and it will setup R0 value.
// We recomend execute this routine only on setup or on the laboratory and save on the eeprom of your arduino
// This routine not need to execute to every restart, you can load your R0 if you know the value
// Acknowledgements: https://jayconsystems.com/blog/understanding-a-gas-sensor
Serial.print("Calibrating please wait.");
float calcR0 = 0;
for(int i = 1; i<=10; i ++)
{
  MQ8.update(); // Update data, the arduino will be read the voltage on the analog pin
  calcR0 += MQ8.calibrate(RatioMQ8CleanAir);
  Serial.print(".");
}
MQ8.setR0(calcR0/10);
Serial.println("  done!.");

if(isinf(calcR0)) {Serial.println("Warning: Conection issue founded, R0 is infite (Open circuit detected) please check your wiring and supply"); while(1);}
if(calcR0 == 0){Serial.println("Warning: Conection issue founded, R0 is zero (Analog pin with short circuit to ground) please check your wiring and supply"); while(1);}
/*****************************  MQ CAlibration ********************************************/

MQ8.serialDebug(true);
}

const long interval=20000;
unsigned long previousMillis=0;

void loop() {

  MQ8.update(); // Update data, the arduino will be read the voltage on the analog pin
  MQ8.readSensor(); // Sensor will read PPM concentration using the model and a and b values setted before or in the setup
  MQ8.serialDebug(); // Will print the table on the serial port
  sensorValue = analogRead(Pin);
  delay(1000); //Sampling frequency


    String buf;
    buf+=String(sensorValue);
    buf+=String("@");
    buf+=String(MQ8.readSensor());
    client.publish(topic, buf.c_str());
  }
